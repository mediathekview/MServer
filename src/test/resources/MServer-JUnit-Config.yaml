#### Server configurations ####

    # The maximum amount of cpu threads to be used.
    maximumCpuThreads: 80

    # The maximum duration in minutes the server should run.<br>
    # If set to 0 the server runs without a time limit.
    maximumServerDurationInMinutes: 0
    
    # These Sender will NOT be crawled.
    # If no Sender are included the server will crawl all Sender but these.
    #senderExcluded:
    #  - ARD
    
    # If set only these Sender will be crawled all other will be ignored.
    senderIncluded:
     - BR
    
    # If set the server will be awake after the crawler run and restarts the run after the given amount.
    #schedules:
    #   HalfDay:
    #        duration: 12
    #        unit: HOURS
    
    # The formats in which the filmlist should be saved to.
    # Possible are: JSON, OLD_JSON, JSON_COMPRESSED_XZ, OLD_JSON_COMPRESSED_XZ
    filmlistSaveFormats:
    # - JSON
      - OLD_JSON
    #  - JSON_COMPRESSED_XZ
      - OLD_JSON_COMPRESSED_XZ
    
    # The paths where which filmlist should be safed to.
    filmlistSavePaths:
    #  JSON: filmliste.json
      OLD_JSON: filmlists/filmliste_old.json
    #  JSON_COMPRESSED_XZ: filmliste.json.xz
      OLD_JSON_COMPRESSED_XZ: filmlists/filmliste_old.json.xz
      
    # The paths where which diff film list should be safed to.
    # If not set no difference film lists will be safed.
    filmlistDiffSavePaths:
    #  JSON: filmliste_diff.json
      OLD_JSON: filmlists/filmliste_old_diff.json
    #  JSON_COMPRESSED_XZ: filmliste_diff.json.xz
      OLD_JSON_COMPRESSED_XZ: filmlists/filmliste_old_diff.json.xz
    
    # Sets if a filmlist should be imported
    filmlistImportEnabled: false
    
    # The format of the film list to import.
    # Possible are: JSON, OLD_JSON, JSON_COMPRESSED_XZ, OLD_JSON_COMPRESSED_XZ
    #filmlistImportFormat: OLD_JSON_COMPRESSED_XZ
    
    # The path/URL of the film list to import.
    #filmlistImportLocation: https://google.de

#### Default crawler configurations ####
     # The maximum amount of URLs to be processed per task.
    maximumUrlsPerTask: 50

     # The maximum duration in minutes a crawler may run.
    maximumCrawlDurationInMinutes: 30

     # The maximum amount of sub pages to be crawled.<br>
     # Example: If a Sendung overview side has 10 pages with videos for this Sendung and
     # the amount set by this is 5 then the crawler crawls pages 1 to 5.
    maximumSubpages: 25
    
    # The maximum amount of days going to past will be crawled for the "Sendung Verpasst?" section.
    maximumDaysForSendungVerpasstSection: 30
    
    crawlerURLs:
      BR_API_URL: http://localhost:8589/myBrRequets


#### Specific crawler configurations ####
#    senderConfigurations:
#      ARD:
        # The maximum amount of URLs to be processed per task.
#        maximumUrlsPerTask: 25
        # The maximum duration in minutes a crawler may run.
#          maximumCrawlDurationInMinutes: 30
        # The maximum amount of sub pages to be crawled.<br>
        # Example: If a Sendung overview side has 10 pages with videos for this Sendung and
        # the amount set by this is 5 then the crawler crawls pages 1 to 5.
#          maximumSubpages: 3


#### COPY ####
    copySettings:
        # En- / disables FTP
        copyEnabled: false
        
        # The paths where to safe the film list files.
        # WARNING: You can only set the path for film list formats you listed in "filmlistSaveFormats".
        # Required if enabled
        copyTargetFilePaths: 
        # JSON: /var/www/mediathekview/filmlisten/filmliste.json
         OLD_JSON: copyTarget/filmliste_old.json
        # JSON_COMPRESSED_XZ: /var/www/mediathekview/filmlisten/filmliste.json.xz
         OLD_JSON_COMPRESSED_XZ: copyTarget/filmliste_old.json.xz
        
        copyTargetDiffFilePaths: 
        # JSON: /var/www/mediathekview/filmlisten/filmliste_diff.json
         OLD_JSON: copyTarget/filmliste_old_diff.json
        # JSON_COMPRESSED_XZ: /var/www/mediathekview/filmlisten/filmliste_diff.json.xz
         OLD_JSON_COMPRESSED_XZ: copyTarget/filmliste_old_diff.json.xz

#### FTP ####
    ftpSettings:
        # En- / disables FTP
        ftpEnabled: false
        
      
        # The FTP server url
        # Required if enabled
        # ftpUrl: ftp://ftp.example.com/
        
        # The paths where to safe the film list files on the server and which to safe on it.
        # WARNING: You can only set the path for film list formats you listed in "filmlistSaveFormats".
        # Required if enabled
        #ftpTargetFilePaths: 
        # JSON: /var/www/mediathekview/filmlisten/filmliste.json
        # OLD_JSON: /var/www/mediathekview/filmlisten/filmliste_old.json
        # JSON_COMPRESSED_XZ: /var/www/mediathekview/filmlisten/filmliste.json.xz
        # OLD_JSON_COMPRESSED_XZ: /var/www/mediathekview/filmlisten/filmliste_old.json.xz
        
        #ftpTargetDiffFilePaths: 
        # JSON: /var/www/mediathekview/filmlisten/filmliste_diff.json
        # OLD_JSON: /var/www/mediathekview/filmlisten/filmliste_old_diff.json
        # JSON_COMPRESSED_XZ: /var/www/mediathekview/filmlisten/filmliste_diff.json.xz
        # OLD_JSON_COMPRESSED_XZ: /var/www/mediathekview/filmlisten/filmliste_old_diff.json.xz
      
      # The FTP port of the server.
      # Optional, if not set the default will be used.
      # ftpPort: 21
      
      # The username of the FTP user.
      # Optional but required if password is set.
      # ftpUsername: ftpUser
      
      # The password of the FTP user.
      # Optional but required if the username is set.
      # ftpPassword: !fTpSeCuReD

#### Logging ####
    logSettings:
      # The log level for the console.
      # Can be: DEBUG, INFO, WARN, ERROR, FATAL
      logLevelConsole: INFO
      
      # The log level for the log file.
      # Can be: DEBUG, INFO, WARN, ERROR, FATAL
      logLevelFile: ERROR
      
      # Should be logged to console?
      logActivateConsole: true
      
      # Should be logged to console?
      logActivateFile: true
      
      # En- or disables the rolling file appender.
      # If enabled the rolling file appender creates a new log file for every run.
      # See: https://logging.apache.org/log4j/2.0/manual/appenders.html#RollingFileAppender
      logActivateRollingFileAppend: true
      
      # The output pattern of the console log.
      # See: https://logging.apache.org/log4j/2.0/manual/layouts.html#PatternLayout
      logPatternConsole: "%d{HH:mm:ss.SSS} %highlight{%d [%t] %-5level: %msg%n%throwable}"
      
      # The output pattern of the file log.
      # See: https://logging.apache.org/log4j/2.0/manual/layouts.html#PatternLayout
      logPatternFile: "%d{HH:mm:ss.SSS} %d [%t] %-5level: %msg%n%throwable"
      
      # The path where the actual log file should be safed to.
      logFileSavePath: logs/server.log
      
      # The pattern of the file name of the archived log files.
      # See: https://logging.apache.org/log4j/2.0/manual/appenders.html#RollingFileAppender
      logFileRollingPattern: logs/${date:yyyy-MM}/server-%d{MM-dd-yyyy}-%i.log